openapi: 3.0.3
info:
  title: Polaris Extended Management Service
  version: 0.0.2
  description: |
    Extended API for Apache Polaris, including support for additional object types and management operations.
servers:
  - url: "{scheme}://{host}/api/opendic/v1"
    description: Polaris API Server
    variables:
      scheme:
        description: Protocol (http or https)
        default: https
      host:
        description: Host address
        default: localhost
security:
  - OAuth2: []

paths:
  /objects:
    get:
      tags:
        - Object DDL
      operationId: listObjects
      description: List all objects in Open dictionary metadata object
      responses:
        200:
          description: Object list retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ObjectMetadata"
        404:
          description: Object not found

  /objects/{name}:
    parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Object DDL
      operationId: showObject
      description: Retrieve objects of type {object} for an object
      responses:
        200:
          description: Object metadata retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectMetadata"
        404:
          description: Object not found

    post:
      tags:
        - Object DDL
      operationId: createObject
      description: Create a new Open dictionary metadata object of type {Object}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateObjectRequest"
      responses:
        201:
          description: Object created successfully
        400:
          description: Invalid request data

  /objects/{name}/pull:
    parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - Synchronize
      operationId: spullObject
      description: Puill all objects of type {object} to a requesting database system
      responses:
        200:
          description: Pull completed successfully
        500:
          description: Internal error

  # Andreas: Consider moving to POST at /objects
  # /udo/define:
  #   post:
  #     tags:
  #       - UDO
  #     operationId: addUDO
  #     description: Add a user-defined object (UDO)
  #     requestBody:
  #       required: true
  #     responses:
  #       201:
  #         description: UDO created successfully
  #       400:
  #         description: Invalid request data

components:
  schemas:
    CreateObjectRequest:
      type: object
      properties:
        name:
          type: string
        arguments:
          type: object
          additionalProperties:
            type: string
    ObjectMetadata:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        details:
          type: object
          additionalProperties:
            type: string
